#!/usr/sbin/nft -f
# The first line is required in order to import "defined variables".
# `-rw-r--r-- root root /etc/nftables/router.conf`

# ROUTER CONFIGURATION
# The router ruleset is intended to extend or replace the default ruleset.
# This script declares `#!/usr/sbin/nft -f` because it is necessary
# in order to import variables using the parameter `--default name=value`.

# Clear any previous ruleset.
flush ruleset

# PORT VARIABLES
include "/etc/nftables/router.port.conf"

# IPv4 VARIABLES
include "/etc/nftables/router.ipv4.conf"

# IPv6 VARIABLES
include "/etc/nftables/router.ipv6.conf"

# INTERFACE VARIABLES
include "/etc/nftables/router.interface.conf"

# CHAIN RULES
include "/etc/nftables/router.prerouting.conf"
include "/etc/nftables/router.input.conf"
include "/etc/nftables/router.output.conf"
include "/etc/nftables/router.postrouting.conf"

# Netfilter hook order:
# ingress -> prerouting -> routing decision -> forward -+
#                                 |                     |
#                                 V                     |
#          local process <- inbound traffic             +--> postrouting
#                |                                      |
#                V                                      |
#       routing decision -> outbound traffic -----------+
#
# The following diagram from (2021-12-17)
# https://paulgorman.org/technical/linux-nftables.txt.html
#
#
#                           ◂            ◂             ◂    (For example,
#                         ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓ ↙  loopback traffic)
#                         ┃                             ┃
#                        ▾┃  INPUT ○╮       ╭○ OUTPUT   ┃▴
#                         ┃   hook  │       │  hook    ┏┻┓ ▸   ▸   ▸  outbound
#                    ┏━━━━┻━━━━━━━━━┿━━┓ ┏━━┿━━━━━━━━━━┫╳┣━━━━━┳━━┿━━ traffic ▸
#                    ┃ ▸    ▸      ▸   ┃ ┃     ▸     ▸ ┗┯┛     ┃▴ │
#                    ┃                ▾┃ ┃▴             │      ┃  │
#                    ┃▴            local system         │      ┃  ╰○ POSTROUTING
# inbound      ▸    ┏┻┓                                 │      ┃     hook
# traffic ▸ ━━━━━┿━━┫╳┠── routing decision    routing decision ┃
#                │  ┗┳┛                                        ┃
#    PREROUTING ○╯  ▾┃                                         ┃▴
#          hook      ┗━━━━━━━━━━━━━┿━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
#                      ▸         ▸ │           ▸           ▸
#                                  ╰○ FORWARD hook
#

# The main rule for all chains with exception for "postrouting" is to drop
# everything unless explicitly approved. At the stage of "postrouting" all
# relevant filters should have been applied and the traffic is only to be
# "masqueraded".
#
# "Nmap Network Scanning Chapter 15. Nmap Reference Guide [Port Scanning Basics](https://nmap.org/book/man-port-scanning-basics.html)
# By default, drop all traffic unless it meets a filter criteria specified by
# the rules that follow below. The alternative is to `policy accept` and reject
# everything that does not pass with the last rule `reject`. The former method
# is preferred because it indicates that any unqualified package has been
# "filtered". Packages that are "filtered" provide little information to
# a potential attacker on what has happened.
# "

table inet router {

  include "/etc/nftables/router.prerouting.chain"
  include "/etc/nftables/router.forward.chain"
  include "/etc/nftables/router.input.chain"
  include "/etc/nftables/router.output.chain"
  include "/etc/nftables/router.postrouting.chain"

}

