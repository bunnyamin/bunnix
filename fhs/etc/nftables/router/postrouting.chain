# `-rw-r--r-- root root /etc/nftables/router/postrouting.chain`

# POSTROUTING CHAIN
# Extends `base.conf`

chain postrouting {
  #log prefix "[nftables.router.postrouting] Postrouting: " flags all counter

  type nat hook postrouting priority 100; policy accept;

  # Allow all ICMP (ping) and IGMP (multicast) traffic
  ip protocol icmp   accept
  ip6 nexthdr icmpv6 accept
  ip protocol igmp   accept

  # Allow traffic from loopback interface only if from localhost
  oifname "lo" ip saddr $loopback_ipv4 ip daddr $loopback_ipv4 ct state {new, established, related} accept

  # Masquerade traffic
  # All traffic from `iifname` are shown as coming from `oifname`.

  # LAN to VPN
  iifname $lan_if_set oifname $wan_vpn_if masquerade

  # LAN to WAN
  # The LAN to WAN traffic only works if the VPN is down. However, disable it
  # in order to prevent further traffic on VPN failure. That is, by disabling
  # the WAN it should function as a "killswitch".
  #iifname $lan_if_set oifname $wan_if_set masquerade

  #
  # Rules
  #
  include "/etc/nftables/router/postrouting.rules"

  #
  # Log
  #
  log prefix "[nftables.router.postrouting] Dropped: " flags all counter drop
  ip saddr != $log_ignore_ipv4 tcp dport != $log_ignore_tcp log prefix "[nftables.router.postrouting] Postrouting Denied TCP: " flags all counter
  ip saddr != $log_ignore_ipv4 udp dport != $log_ignore_udp log prefix "[nftables.router.postrouting] Postrouting Denied UDP: " flags all counter

}
