# `-rw-r--r-- root root /etc/nftables/router/simple.conf`

# SIMPLE ROUTER CONFIGURATION
# Require: IP forwarding
# systemd `sysctl net.ipv4.ip_forward=1`

# Clear any previous ruleset.
flush ruleset

# PORT VARIABLES
include "/etc/nftables/router/port.conf"

# IPv4 VARIABLES
include "/etc/nftables/router/ipv4.conf"

# IPv6 VARIABLES
include "/etc/nftables/router/ipv6.conf"

# INTERFACE VARIABLES
include "/etc/nftables/router/interface.conf"

table inet router {

  chain prerouting {
    type nat hook prerouting priority 0; policy accept;
    #log prefix "[nftables.router.simple] Prerouting Denied: "

    #
    # Log
    #
    # ip saddr != $log_ignore_ipv4 tcp dport != $log_ignore_tcp log prefix "[nftables.router.simple] Prerouting Denied TCP: " flags all counter
    # ip saddr != $log_ignore_ipv4 udp dport != $log_ignore_udp log prefix "[nftables.router.simple] Prerouting Denied UDP: " flags all counter
  }

  chain postrouting {
    #log prefix "[nftables.router.simple] Postrouting: " flags all counter

    type nat hook postrouting priority 100;

    # Allow traffic from loopback interface only if from localhost
    oifname "lo" ip saddr $loopback_ipv4 ip daddr $loopback_ipv4 ct state {established, related, new} accept

    # Masquerade traffic
    # All traffic from `iifname` are shown as coming from `oifname`.

    # LAN to WAN
    iifname $lan_if oifname $wan_if masquerade

    #
    # Log
    #
    # ip saddr != $log_ignore_ipv4 tcp dport != $log_ignore_tcp log prefix "[nftables.router.simple] Postrouting Denied TCP: " flags all counter
    # ip saddr != $log_ignore_ipv4 udp dport != $log_ignore_udp log prefix "[nftables.router.simple] Postrouting Denied UDP: " flags all counter
    log prefix "[nftables.router.simple] Postrouting Dropped: " flags all counter drop
  }

  chain forward {
    #log prefix "[nftables.router.simple] Forward: " flags all counter

    type filter hook forward priority 0; policy drop

    # Allow established and, or related connections
    ct state {established, related} accept

    # Early drop of invalid connections
    ct state invalid drop

    # Allow packages from LAN to LAN, if either initiated the connection
    iifname $lan_if oifname $lan_if accept

    # Allow packages from LAN to WAN, and from WAN to LAN if LAN initiated the connection
    iifname $lan_if oifname $wan_if accept

    log prefix "[nftables.router.simple] Forwarding Dropped: " flags all counter drop
  }

  chain output {
    type filter hook output priority 100; policy accept

    #
    # Log
    #
    # tcp dport != $log_ignore_tcp log prefix "[nftables.router.simple] Output Denied TCP: " flags all counter
    # udp dport != $log_ignore_tcp log prefix "[nftables.router.simple] Output Denied UDP: " flags all counter
  }

  chain input {

    #log prefix "[nftables.router.simple] Input: " flags all counter

    type filter hook input priority 0; policy drop

    # Early drop of invalid connections
    ct state invalid drop

    # Allow traffic from loopback interface only if from localhost
    iifname "lo" ip  saddr $loopback_ipv4 ct state {established, related, new} accept
    iifname "lo" ip  saddr $prv6_ipv4     ct state {established, related, new} accept
    iifname "lo" ip6 saddr $loopback_ipv6 ct state {established, related, new} accept

    # Allow all ICMP (ping) and IGMP (multicast) traffic
    # * The limit rate is intended to prevent some types of flood attacks.
    # * `ipv6-icmp` and `icmpv6` are aliases.
    ip protocol icmp   limit rate 4/second ct state {established, related} accept
    ip6 nexthdr icmpv6 limit rate 4/second ct state {established, related} accept
    ip protocol igmp   limit rate 4/second ct state {established, related} accept

    # Allow established and, or related connections
    ct state {established, related} accept

    # All new connections from internal computers
    iifname $lan_if ct state {established, related, new} accept

    #
    # Log
    #
    # ip saddr != $log_ignore_ipv4 tcp dport != $log_ignore_tcp log prefix "[nftables.router.simple] Input Denied TCP: " flags all counter
    # ip saddr != $log_ignore_ipv4 udp dport != $log_ignore_udp log prefix "[nftables.router.simple] Input Denied UDP: " flags all counter
    log prefix "[nftables.router.simple] Input Dropped: " flags all counter drop
  }
}
